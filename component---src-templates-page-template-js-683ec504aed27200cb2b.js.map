{"version":3,"sources":["webpack:///./src/templates/page-template.js","webpack:///./src/utils/get-og-url.js"],"names":["query","PageTemplate","data","location","useSiteMetadata","siteTitle","title","siteSubtitle","subtitle","url","ogUrl","getOgUrl","pathname","pageBody","markdownRemark","html","frontmatter","pageTitle","pageDescription","description","socialImage","metaDescription","isDesktopOrLaptop","useMediaQuery","hideNav","dangerouslySetInnerHTML","__html","slug","replace"],"mappings":"6FACA,8IA4CaA,EAAK,YAkBHC,UA7CM,SAAC,GAA+B,IAA7BC,EAA4B,EAA5BA,KAAMC,EAAsB,EAAtBA,SAAsB,EACQC,cAA3CC,EADmC,EAC1CC,MAA4BC,EADc,EACxBC,SAAwBC,EADA,EACAA,IAC5CC,EAAQC,YAASF,EAAKN,EAASS,UACvBC,EAAaX,EAAKY,eAAxBC,KACAC,EAAgBd,EAAKY,eAArBE,YACOC,EAAyDD,EAAhEV,MAA+BY,EAAiCF,EAA9CG,YAA8BC,EAAgBJ,EAAhBI,YAClDC,EAAsC,OAApBH,EAA2BA,EAAkBX,EAC/De,EAAoBC,wBAAc,CACtCvB,MAAO,+BAGT,OACE,kBAAC,IAAD,CACEwB,QAASF,EACThB,MAAUW,EAAL,MAAoBZ,EACzBc,YAAaE,EACbD,YAAaA,EACbV,MAAOA,GAELY,GAAqB,kBAAC,IAAD,MACvB,kBAAC,IAAD,CAAMhB,MAAOW,GACX,yBAAKQ,wBAAyB,CAAEC,OAAQb,S,gFCvCjC,SAASF,EAASF,EAAKkB,GAGlC,MADW,GADMlB,EAAImB,QAAQ,MAAO,IACRD","file":"component---src-templates-page-template-js-683ec504aed27200cb2b.js","sourcesContent":["// @flow strict\nimport React from 'react';\nimport { graphql } from 'gatsby';\nimport Layout from '../components/Layout';\nimport Sidebar from '../components/Sidebar';\nimport { useMediaQuery } from 'react-responsive';\n\nimport Page from '../components/Page';\nimport { useSiteMetadata } from '../hooks';\nimport getOgUrl from '../utils/get-og-url';\nimport type { MarkdownRemark } from '../types';\n\ntype Props = {\n  data: {\n    markdownRemark: MarkdownRemark\n  }\n};\n\nconst PageTemplate = ({ data, location }: Props) => {\n  const { title: siteTitle, subtitle: siteSubtitle, url } = useSiteMetadata();\n  const ogUrl = getOgUrl(url, location.pathname);\n  const { html: pageBody } = data.markdownRemark;\n  const { frontmatter } = data.markdownRemark;\n  const { title: pageTitle, description: pageDescription, socialImage } = frontmatter;\n  const metaDescription = pageDescription !== null ? pageDescription : siteSubtitle;\n  const isDesktopOrLaptop = useMediaQuery({\n    query: '(min-device-width: 1224px)'\n  });\n\n  return (\n    <Layout\n      hideNav={isDesktopOrLaptop}\n      title={`${pageTitle} - ${siteTitle}`} \n      description={metaDescription} \n      socialImage={socialImage}\n      ogUrl={ogUrl}\n    >\n      { isDesktopOrLaptop && <Sidebar /> }\n      <Page title={pageTitle}>\n        <div dangerouslySetInnerHTML={{ __html: pageBody }} />\n      </Page>\n    </Layout>\n  );\n};\n\nexport const query = graphql`\n  query PageBySlug($slug: String!) {\n    markdownRemark(fields: { slug: { eq: $slug } }) {\n      id\n      html\n      frontmatter {\n        title\n        date\n        description\n        socialImage,\n        verse,\n        recommendVerses,\n        slug\n      }\n    }\n  }\n`;\n\nexport default PageTemplate;\n","export default function getOgUrl(url, slug) {\n    const sitePath = url.replace(/\\/$/, \"\");\n    const ogUrl = `${sitePath}${slug}`;\n    return ogUrl;\n}"],"sourceRoot":""}